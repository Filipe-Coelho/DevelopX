{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bank.service.ts","webpack:///./src/app/components/app.pipe.filter.ts","webpack:///./src/app/components/client/client.component.css","webpack:///./src/app/components/client/client.component.html","webpack:///./src/app/components/client/client.component.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/index/index.component.css","webpack:///./src/app/components/index/index.component.html","webpack:///./src/app/components/index/index.component.ts","webpack:///./src/app/components/withdraw/withdraw.component.css","webpack:///./src/app/components/withdraw/withdraw.component.html","webpack:///./src/app/components/withdraw/withdraw.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<ng2-slim-loading-bar color=\\\"blue\\\"></ng2-slim-loading-bar>\\n<nav class=\\\"navbar navbar-expand-sm bg-light\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\">\\n            <a routerLink=\\\"create\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n              Create Client\\n            </a>\\n          </li>\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"withdraw\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n          Withdraw Money\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"index\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n          List of Withdraws\\n        </a>\\n      </li> \\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"clients\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n          List of Clients\\n        </a>\\n      </li> \\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\nimport {SlimLoadingBarService} from 'ng2-slim-loading-bar';\nimport { NavigationCancel,\n  Event,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Bank App';\n\n  constructor(private _loadingBar: SlimLoadingBarService, private _router: Router) {\n    this._router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n  }\n\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this._loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this._loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this._loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this._loadingBar.stop();\n    }\n  }\n  \n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { AppComponent } from './app.component';\nimport { BankService } from './bank.service';\nimport { CreateComponent } from './components/create/create.component';\nimport { EditComponent } from './components/edit/edit.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { WithdrawComponent } from './components/withdraw/withdraw.component';\nimport { ClientComponent } from './components/client/client.component';\nimport { FilterPipeSearch } from './components/app.pipe.filter';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WithdrawComponent\n  },\n  {\n    path: 'create',\n    component: CreateComponent\n  },\n  {\n    path: 'withdraw',\n    component: WithdrawComponent\n  },\n  {\n    path: 'edit',\n    component: EditComponent,\n    data:{history: history}\n  },\n  {\n    path: 'index',\n    component: IndexComponent\n  },\n  {\n    path: 'clients',\n    component: ClientComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateComponent,\n    WithdrawComponent,\n    IndexComponent,\n    EditComponent,\n    ClientComponent,\n    FilterPipeSearch,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    SlimLoadingBarModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    Ng2SearchPipeModule, \n    Ng2OrderModule, \n    NgxPaginationModule\n  ],\n  providers: [ BankService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Bank } from './components/index/Bank';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BankService {\n\n  uri = 'http://localhost:8080';\n\n  constructor(private http: HttpClient) { }\n\n  withdraw(amount, clientId): Observable<any> {\n    return this.http\n      .get(`${this.uri}/withdraw/${amount}/${clientId}`);\n      // .map(response => response.toString())\n  }\n\n  updateClient(id, name, identifier): Observable<any> {\n    const params = {\n      id: id,\n      identifier: identifier,\n      name: name\n    };\n    return this.http\n      .post(`${this.uri}/updateClient`, params );\n  }\n\n  getHistory(): Observable<any>{\n    return this.http\n      .get(`${this.uri}/history/`);\n  }\n\n\n  \n  deleteHistory(id): Observable<any>{\n    return this.http\n      .get(`${this.uri}/deleteHistory/${id}`);\n  }\n\n  deleteClient(id): Observable<any>{\n    return this.http\n      .get(`${this.uri}/deleteClient/${id}`);\n  }\n  \n  getListClients(): Observable<any>{\n    return this.http\n      .get(`${this.uri}/clients/`);\n  }\n\n  createClient(identification: number, name: string ): Observable<any> {\n    const params = {\n      identifier: identification,\n      name: name\n    };\n    return  this.http.post(`${this.uri}/createClient`, params);\n  }\n\n  addAdUnit(unit_name, unit_price) {\n    const obj = {\n      unit_name: unit_name,\n      unit_price: unit_price\n    };\n    this.http.post(`${this.uri}/add`, obj)\n        .subscribe(res => console.log('Done'));\n  }\n\n  getAdUnits() {\n    return this\n           .http\n           .get(`${this.uri}`);\n}\n\neditAdUnit(id) {\n  return this\n            .http\n            .get(`${this.uri}/edit/${id}`);\n}\n\nupdateAdUnit(unit_name, unit_price, id) {\n\n  const obj = {\n    unit_name: unit_name,\n    unit_price: unit_price\n  };\n  this\n    .http\n    .post(`${this.uri}/update/${id}`, obj)\n    .subscribe(res => console.log('Done'));\n}\n\n  deleteAdUnit(id) {\n    return this\n              .http\n              .get(`${this.uri}/delete/${id}`);\n  }\n}\n","import { Pipe, PipeTransform, Injectable } from '@angular/core';\r\nimport { History } from './index/History';\r\n\r\n@Pipe({\r\n    name: 'stringFilter'\r\n})\r\n@Injectable()\r\nexport class FilterPipeSearch implements PipeTransform {\r\n    transform(value: History[], q: string) {\r\n        if (!q || q === '') {\r\n            return value;\r\n        }\r\n        return value.filter(item => item.client.name.toLowerCase().match(q.toLowerCase()));\r\n    }\r\n\r\n\r\n}","module.exports = \"\"","module.exports = \" \\n<br>\\n<div class=\\\"row\\\">\\n    <label class=\\\"col-sm-0 mr-1\\\" for=\\\"filterNameClient\\\">Name: </label>\\n    <input type=\\\"text\\\" class=\\\"input col-sm-2  border border-gray \\\" placeholder=\\\"Filer by Name\\\" id=\\\"filterNameClient\\\"\\n      (keyup)=\\\"filterListClient(keyFilter.value, keyFilterIdentifier.value)\\\"\\n      #keyFilter >\\n      <span class=\\\"mr-2\\\" ></span>\\n      <label class=\\\"col-sm-0 mr-1\\\" for=\\\"filterIdentifierClient\\\">Identification: </label>\\n    <input type=\\\"text\\\" class=\\\"input col-sm-2  border border-gray \\\" \\n        placeholder=\\\"Filer by Identification\\\" id=\\\"filterIdentifierClient\\\"\\n        (keyup)=\\\"filterListClient(keyFilter.value, keyFilterIdentifier.value)\\\"\\n        #keyFilterIdentifier >\\n</div>\\n<br>\\n<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n    <td>Client name</td>\\n    <td>Client Identification</td>\\n    <td>Created date</td>\\n    <td >Edit</td>\\n    <td >Delete</td>\\n  </tr>\\n  </thead>\\n\\n  <tbody>\\n      <tr *ngFor=\\\"let client of (\\n        listClientFiltered == null ? clients : listClientFiltered\\n        ) | paginate: { itemsPerPage: 4, currentPage: p }; \\\">\\n          <td>{{ client.name }}</td>\\n          <td>{{ client.identifier  }}</td>\\n          <td >{{ client?.createTime | date: \\\"MM/dd/yyyy HH:mm\\\"}}</td>\\n          <td><a [routerLink]=\\\"['/edit', client ]\\\" class=\\\"btn btn-primary\\\">Edit</a></td>\\n          <td><button (click)=\\\"deleteClient(client.id)\\\"  class=\\\"btn btn-danger\\\">Delete</button></td>\\n      </tr>\\n  </tbody>\\n  <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { BankService } from 'src/app/bank.service';\nimport { ApiObject } from '../api.object.compone';\nimport { Client } from '../index/Client';\nimport { FilterPipeSearch } from '../app.pipe.filter';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.css']\n})\nexport class ClientComponent implements OnInit {\n\n  listClient: Client[];\n  apiObject: ApiObject;\n  clients: Client[];\n\n  listClientFiltered: Client[] = null;\n  filterIdentifier: string;\n  filterName: string;\n  private pipeFilter: FilterPipeSearch = new FilterPipeSearch;\n\n  constructor(private bankervice: BankService) { }\n\n\n  filterByName(name: string) {\n    if(!name || name === ''){\n      this.listClientFiltered = null;\n      return;\n    }\n    let filtered =  this.clients.filter(item => item.name.toLowerCase().match(name.toLowerCase()));\n    this.listClientFiltered = filtered;\n    return filtered;\n }\n\n filterListClient(name: string, identifier: string) {\n   this.filterIdentifier = identifier;\n   this.filterName = name;\n  \n  let listFiltredByName = this.filterByName(name);\n  let filtered = [];\n\n  if(listFiltredByName){\n    filtered = listFiltredByName.filter(item => item.identifier.toString().match(identifier) );\n  }else{\n    filtered = this.clients.filter(item => item.identifier.toString().match(identifier) );\n  }\n\n  this.listClientFiltered = filtered;\n}\n\n\n\n  deleteClient(id) {\n    this.bankervice.deleteClient(id).subscribe(success=>{\n      console.log('Deleted');\n      console.log(success);\n      this.getListClients();\n    },\n    error => {\n      console.log(error);\n      alert(\"Error to delete Client.\");\n    });\n\n  }\n\n  ngOnInit() {\n    this.getListClients();\n  }\n\n  getListClients(){\n    this.bankervice\n        .getListClients()\n        .subscribe(success=>{\n          this.clients = success.message;\n          this.listClientFiltered = this.clients;\n          this.filterListClient(this.filterName, this.filterIdentifier);\n        },\n        error => {\n          console.log(error);\n          alert(\"Error to get Clients.\");\n        });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Client identification</label>\\n        <input type=\\\"text\\\" placeholder=\\\"Client identification\\\" class=\\\"form-control\\\" name=\\\"clientIdentification\\\" formControlName=\\\"clientIdentification\\\" #clientIdentification/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['clientIdentification'].invalid && (angForm.controls['clientIdentification'].dirty || angForm.controls['clientIdentification'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['clientIdentification'].errors.required\\\">\\n          Client Identification is required.\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Client name</label>\\n        <input type=\\\"text\\\" placeholder=\\\"Client name\\\" class=\\\"form-control\\\" name=\\\"name\\\" formControlName=\\\"name\\\" #name/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['name'].errors.required\\\">\\n          Client name is required.\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"save(angForm)\\\" \\n            [disabled]=\\\"angForm.pristine || angForm.invalid\\\" \\n            class=\\\"btn btn-primary\\\">Save</button>\\n      </div>\\n\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { BankService } from 'src/app/bank.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  angForm: FormGroup;\n\n  constructor(private bankService: BankService, private fb: FormBuilder) { \n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      clientIdentification: ['', Validators.required ],\n      name: ['', Validators.required ]\n   });\n  }\n\n  save(angForm: FormGroup) {\n    let identification = angForm.get('clientIdentification');\n    let name = angForm.get('name');\n    this.bankService.createClient(Number(identification.value) , name.value)\n    .subscribe(success=>{\n      console.log(success);\n      alert(\"Client Saved successfully!\");\n      this.clearFields();\n    },\n    error => {\n      console.log(error);\n      alert(\"Error to save Client.\");\n    });\n  }\n  \n  clearFields(){\n    this.angForm.get('clientIdentification').setValue('');\n    this.angForm.get('name').setValue('');\n    this.angForm.reset();\n  } \n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n        {{angForm.get('clientName').value}}\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Client Name</label>\\n        <input type=\\\"text\\\" \\n          class=\\\"form-control\\\" \\n          name=\\\"clientName\\\" \\n          value=\\\"angForm.get('clientName').value\\\"\\n          formControlName=\\\"clientName\\\" \\n          #clientName [(ngModel)] = \\\"angForm.get('clientName').value\\\"/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['clientName'].invalid && (angForm.controls['clientName'].dirty || angForm.controls['clientName'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['clientName'].errors.required\\\">\\n          Client Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Client Identification</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"clientIdentifier\\\" \\n          formControlName=\\\"clientIdentifier\\\" #clientIdentifier \\n          [(ngModel)] = \\\"angForm.get('clientIdentifier').value\\\"/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['clientIdentifier'].invalid && (angForm.controls['clientIdentifier'].dirty || angForm.controls['clientIdentifier'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['clientIdentifier'].errors.required\\\">\\n          Client Price is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"updateClient(updateClient)\\\" [disabled]=\\\"angForm.invalid\\\" class=\\\"btn btn-primary\\\">Update Client</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { BankService } from 'src/app/bank.service';\nimport { History } from '../index/History';\nimport { Client } from '../index/Client';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  adClient: any = {};\n  angForm: FormGroup;\n  client: Client;\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private bankservice: BankService,\n    private fb: FormBuilder) {\n      \n    }\n    createForm() {\n      this.angForm = this.fb.group({\n            clientName: [this.client.name, Validators.required ],\n            clientIdentifier: [this.client.identifier, Validators.required ]\n         });\n      }\n\n    updateClient() {\n      try {\n        this.bankservice.updateClient(\n          this.client.id, \n          this.angForm.get('clientName').value, \n          this.angForm.get('clientIdentifier').value).subscribe(success=>{\n            console.log(success);\n            this.router.navigateByUrl('/clients');\n          },\n          error => {\n            console.log(error);\n            alert(\"Error to update client.\");\n          });\n      } catch (error) {\n        alert(\"Error to update Client.\");\n      }\n     \n      // this.route.params.subscribe(params => {\n      //     this.adunitservice.updateAdUnit(unit_name, unit_price, params['id']);\n      //     this.router.navigate(['index']);\n      // });\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        let client: Client;\n        client = JSON.parse(JSON.stringify(params));\n        this.client = client;\n        this.createForm();\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \" \\n<br>\\n<div class=\\\"row\\\">\\n    <label class=\\\"col-sm-0 mr-1\\\" for=\\\"filterNameClient\\\">Name: </label>\\n    <input type=\\\"text\\\" class=\\\"input col-sm-2  border border-gray \\\" placeholder=\\\"Filer by Name\\\" id=\\\"filterNameClient\\\"\\n      (keyup)=\\\"filterListHistory(keyFilter.value, keyFilterAmount.value)\\\"\\n      #keyFilter >\\n      <span class=\\\"mr-2\\\" ></span>\\n      <label class=\\\"col-sm-0 mr-1\\\" for=\\\"filterAmountClient\\\">Amount: </label>\\n      <input type=\\\"text\\\" class=\\\"input col-sm-2  border border-gray \\\" \\n        placeholder=\\\"Filer by Amount\\\" id=\\\"filterAmountClient\\\"\\n        (keyup)=\\\"filterListHistory(keyFilter.value, keyFilterAmount.value)\\\"\\n        #keyFilterAmount >\\n</div>\\n<br>\\n<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n    <td>Client name</td>\\n    <td>Client Identification</td>\\n    <td>Amout to Withdraw</td>\\n    <td>Notes</td>\\n    <td colspan=\\\"2\\\">Actions</td>\\n  </tr>\\n  </thead>\\n\\n  <tbody>\\n      <tr *ngFor=\\\"let history of (\\n        listHistoryFiltered == null ? listHistory : listHistoryFiltered\\n        ) | paginate: { itemsPerPage: 4, currentPage: p }; let i=index \\\">\\n          <td>{{ history?.client?.name }}</td>\\n          <td>{{  history?.client?.identifier }}</td>\\n          <td>{{ history?.withdrawAmount }}</td>\\n          <td>\\n            <div *ngFor=\\\"let note of history?.notes; \\\">\\n                {{ note?.quantity }} of {{ note?.name }}\\n            </div>\\n          </td>\\n          <td><button (click)=\\\"deleteHistory(history.id)\\\"  class=\\\"btn btn-danger\\\">Delete</button></td>\\n      </tr>\\n  </tbody>\\n</table>\\n<pagination-controls (pageChange)=\\\"p = $event\\\" responsive=\\\"true\\\"></pagination-controls>\"","import { Component, OnInit, PipeTransform, ChangeDetectionStrategy } from '@angular/core';\nimport { BankService } from 'src/app/bank.service';\nimport { Bank } from './Bank';\nimport { ApiObject } from '../api.object.compone';\nimport { History } from './History';\nimport { forEach } from '@angular/router/src/utils/collection';\nimport { Note } from './Note';\nimport { FilterPipeSearch } from '../app.pipe.filter';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n  \n  public filter: string;\n  totalItems: number;\n  listHistory: History[] = [];\n  listHistoryFiltered: History[] = null;\n  listNote: Note[] = [];\n  apiObject: ApiObject;\n  filterAmount: string;\n  filterName: string;\n\n  constructor(private listBankervice: BankService) { }\n\n\n  filterByName(name: string) {\n    if(!name || name === ''){\n      this.listHistoryFiltered = null;\n      return;\n    }\n    let filtered = this.listHistory.filter(item => item.client.name.toLowerCase().match(name.toLowerCase()));\n    this.listHistoryFiltered = filtered;\n    return filtered;\n }\n\n filterListHistory(name: string, amount: string) {\n   this.filterAmount = amount;\n   this.filterName = name;\n  \n  let listFiltredByName = this.filterByName(name);\n  let filtered = [];\n\n  if(listFiltredByName){\n    filtered = listFiltredByName.filter(item => item.withdrawAmount.toString().match(amount) );\n  }else{\n    filtered = this.listHistory.filter(item => item.withdrawAmount.toString().match(amount) );\n  }\n\n  this.listHistoryFiltered = filtered;\n}\n \n  deleteHistory(id) {\n    this.listBankervice.deleteHistory(id)\n    .subscribe(success=>{\n      this.getListHistory();\n    },\n    error => {\n      console.log(error);\n      alert(\"Error to delete History.\");\n    });\n  }\n\n  ngOnInit() {\n    this.getListHistory();\n  }\n\n\n  getListHistory(){\n    // if(this.listHistoryFiltered != null){\n    //   return this.listHistoryFiltered;\n    // }\n    this.listBankervice\n    .getHistory()\n    .subscribe(success=>{\n      console.log(success.message);\n      this.listHistory = JSON.parse(JSON.stringify(success.message));\n      this.listHistoryFiltered = this.listHistory;\n      this.filterListHistory(this.filterName, this.filterAmount);\n    },\n    error => {\n      console.log(error);\n      alert(\"Error to get History of withdraws.\");\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Client identification</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"clientIdentification\\\" formControlName=\\\"clientIdentification\\\" #clientIdentification/>\\n      </div>\\n\\n      <div *ngIf=\\\"angForm.controls['clientIdentification'].invalid && (angForm.controls['clientIdentification'].dirty || angForm.controls['clientIdentification'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['clientIdentification'].errors.required\\\">\\n          Unit Identification is required.\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Amount to withdraw</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"amount\\\" formControlName=\\\"amount\\\" #amount/>\\n      </div>\\n\\n      <div *ngIf=\\\"angForm.controls['amount'].invalid && (angForm.controls['amount'].dirty || angForm.controls['amount'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['amount'].errors.required\\\">\\n          Unit Price is required.\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"withdraw(clientIdentification.value, amount.value)\\\" \\n            [disabled]=\\\"angForm.pristine || angForm.invalid\\\" \\n            class=\\\"btn btn-primary\\\">Withdraw Money</button>\\n      </div>\\n\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { BankService } from 'src/app/bank.service';\n\n@Component({\n  selector: 'app-withdraw',\n  templateUrl: './withdraw.component.html',\n  styleUrls: ['./withdraw.component.css']\n})\nexport class WithdrawComponent implements OnInit {\n\n  angForm: FormGroup;\n\n  constructor(private bankService: BankService, private fb: FormBuilder) { \n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      clientIdentification: ['', Validators.required ],\n      amount: ['', Validators.required ]\n   });\n  }\n\n  withdraw(clientIdentification, amount) {\n    this.bankService.withdraw(amount,clientIdentification)\n    .subscribe(success=>{\n      console.log(success);\n      alert(\"Withdraw successfully!\");\n      this.clearFields();\n    },\n    error => {\n      console.log(error);\n      alert(\"Error to withdraw money.\");\n    });\n\n  }\n  clearFields(){\n    this.angForm.get('clientIdentification').setValue(' ');\n    this.angForm.get('amount').setValue(' ');\n    this.angForm.reset();\n  } \n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}